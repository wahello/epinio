---
apiVersion: v1
kind: Secret
metadata:
  name: auth
  namespace: {{ .Release.Namespace }}
stringData:
  htpasswd:  {{ .Values.auth.htpasswd | quote }}
---
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "container-registry.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  selector:
    {{- include "container-registry.selectorLabels" . | nindent 4 }}
  ports:
  - name: registry
    port: 5000
    targetPort: 5000
  - name: registry-tls
    port: 443
    targetPort: 443
---
apiVersion: v1
kind: Service
metadata:
  name: registry-node
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "container-registry.labels" . | nindent 4 }}
spec:
  type: NodePort
  selector:
    {{- include "container-registry.selectorLabels" . | nindent 4 }}
  ports:
  - name: registry
    port: 5000
    targetPort: 5000
    nodePort: 30500
  - name: registry-tls
    port: 443
    targetPort: 443
    nodePort: 30501
---
apiVersion: quarks.cloudfoundry.org/v1alpha1
kind: QuarksSecret
metadata:
  name: registry-tls-self-ca
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "container-registry.labels" . | nindent 4 }}
spec:
  request:
    certificate:
      alternativeNames: null
      commonName: registryCA
      isCA: true
      signerType: local
  secretName: registry-tls-self-ca
  type: certificate
  copies:
  - name: registry-tls-self-ca
    namespace: tekton-staging
---
apiVersion: quarks.cloudfoundry.org/v1alpha1
kind: QuarksSecret
metadata:
  name: registry-tls-self
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "container-registry.labels" . | nindent 4 }}
spec:
  request:
    certificate:
      CAKeyRef:
        key: private_key
        name: registry-tls-self-ca
      CARef:
        key: certificate
        name: registry-tls-self-ca
      alternativeNames:
      - registry.{{ .Release.Namespace }}
      commonName: registry
      isCA: false
      signerType: local
  secretName: registry-tls-self
  type: certificate
  copies:
  - name: registry-tls-self
    namespace: tekton-staging
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "container-registry.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "container-registry.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "container-registry.labels" . | nindent 8 }}
    spec:
      containers:
      - name: registry
        image: {{ .Values.registry.image }}
        imagePullPolicy: {{ .Values.registry.imagePullPolicy }}
        env:
        - name: REGISTRY_AUTH
          value: htpasswd
        - name: REGISTRY_AUTH_HTPASSWD_REALM
          value: Registry Realm
        - name: REGISTRY_AUTH_HTPASSWD_PATH
          value: /etc/registry/auth/htpasswd
        volumeMounts:
        - name: registry
          mountPath: /var/lib/registry
          readOnly: false
        - name: auth
          mountPath: /etc/registry/auth
          readOnly: true
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        livenessProbe:
          tcpSocket:
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          tcpSocket:
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
      - name: nginx
        image: {{ .Values.nginx.image }}
        imagePullPolicy: {{ .Values.nginx.imagePullPolicy }}
        ports:
        - name: registry
          containerPort: 443
          protocol: TCP
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
          readOnly: true
        - name: tls-self
          mountPath: /etc/nginx/certs-self
          readOnly: true
        livenessProbe:
          tcpSocket:
            port: 443
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          tcpSocket:
            port: 443
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: registry
        emptyDir: {}
      - name: config
        configMap:
          name: registry-nginx-config
      - name: tls-self
        secret:
          secretName: registry-tls-self
          items:
          - key: certificate
            path: cert.pem
          - key: private_key
            path: key.pem
      - name: auth
        secret:
          secretName: auth
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: registry-nginx-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "container-registry.labels" . | nindent 4 }}
data:
  default.conf: |
    upstream registry {
      server 127.0.0.1:5000;
    }
    server {
      listen                443 ssl;
      server_name           {{ .Release.Name }}-registry.{{ .Release.Namespace }}.svc;
      client_max_body_size  0;
      ssl_certificate           /etc/nginx/certs-self/cert.pem;
      ssl_certificate_key       /etc/nginx/certs-self/key.pem;
      ssl_session_cache         builtin:1000  shared:SSL:10m;
      ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
      ssl_ciphers               HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
      ssl_prefer_server_ciphers on;
      access_log  /var/log/nginx/registry.access.log;
      location / {
        proxy_set_header  Host $host;
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;
        proxy_pass          http://registry;
        proxy_read_timeout  90;
      }
    }
---
# COPIES --------------------------
---
apiVersion: quarks.cloudfoundry.org/v1alpha1
kind: QuarksSecret
metadata:
  labels:
    quarks.cloudfoundry.org/secret-kind: generated
  annotations:
    quarks.cloudfoundry.org/secret-copy-of: epinio-registry/registry-tls-self
  name: registry-tls-self
  namespace: tekton-staging
spec:
  type: copy
  secretName: registry-tls-self
---
apiVersion: quarks.cloudfoundry.org/v1alpha1
kind: QuarksSecret
metadata:
  labels:
    quarks.cloudfoundry.org/secret-kind: generated
  annotations:
    quarks.cloudfoundry.org/secret-copy-of: epinio-registry/registry-tls-self-ca
  name: registry-tls-self-ca
  namespace: tekton-staging
spec:
  type: copy
  secretName: registry-tls-self-ca
