---
apiVersion: v1
kind: Secret
metadata:
  name: auth
  namespace: {{ .Release.Namespace }}
stringData:
  htpasswd:  {{ .Values.auth.htpasswd | quote }}
---
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "container-registry.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  selector:
    {{- include "container-registry.selectorLabels" . | nindent 4 }}
  ports:
  - name: registry
    port: 5000
    targetPort: 5000
  - name: registry-tls
    port: 443
    targetPort: 443
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
  labels:
    {{- include "container-registry.labels" . | nindent 4 }}
  name: registry
  namespace: {{ .Release.Namespace }}
spec:
  rules:
  - host: {{ .Values.domain }}
    http:
      paths:
      - backend:
          serviceName: registry
          servicePort: 5000
        path: /
  tls:
  - hosts:
    - {{ .Values.domain }}
    secretName: epinio-registry-tls
{{ if contains "omg.howdoi.website" .Values.domain }}
---
apiVersion: v1
kind: Service
metadata:
  name: registry-node
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "container-registry.labels" . | nindent 4 }}
spec:
  type: NodePort
  selector:
    {{- include "container-registry.selectorLabels" . | nindent 4 }}
  ports:
  - name: registry
    port: 5000
    targetPort: 5000
    nodePort: 30500
  - name: registry-tls
    port: 443
    targetPort: 443
    nodePort: 30501
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "container-registry.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "container-registry.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "container-registry.labels" . | nindent 8 }}
    spec:
      containers:
      - name: registry
        image: {{ .Values.registry.image }}
        imagePullPolicy: {{ .Values.registry.imagePullPolicy }}
        env:
        - name: REGISTRY_AUTH
          value: htpasswd
        - name: REGISTRY_AUTH_HTPASSWD_REALM
          value: Registry Realm
        - name: REGISTRY_AUTH_HTPASSWD_PATH
          value: /etc/registry/auth/htpasswd
        volumeMounts:
        - name: registry
          mountPath: /var/lib/registry
          readOnly: false
        - name: auth
          mountPath: /etc/registry/auth
          readOnly: true
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        livenessProbe:
          tcpSocket:
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          tcpSocket:
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: registry
        emptyDir: {}
      - name: auth
        secret:
          secretName: auth
